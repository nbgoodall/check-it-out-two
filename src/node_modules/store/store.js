import { writable, derived, get } from 'svelte/store'

import { genericStore } from './utils'

const STORE_KEY = '@store'

const INITIAL_STATE = {
  hoveringIds: [],
  activeLayerIds: [],
  activeFrameIds: [],
  tool: 'brush'
}

const localStore = genericStore(STORE_KEY, INITIAL_STATE)

const STORE = writable(localStore.read())


// Maintain this for the get & update functions below...
let _state = {}

STORE.subscribe(value => {
  _state = value

  return localStore.write(value)
})

export const store = {
  ...STORE,
  get: key => _state[key],
  update: value => STORE.update(state => {
    const result = typeof value === 'function' ? value(state) : value

    return { ...state, ...result }
  })
}