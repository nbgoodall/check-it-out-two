import Tool from './Tool'

import { RESOLUTION } from 'config/constants'

import { getPixelPosition } from 'lib'

class Fill extends Tool {
  constructor() {
    super()

    this.cursor = 'fill'

    this.filled = []
  }

  fill(y, x) {
    let coords = `${y}_${x}`

    if (this.filled.includes(coords)) { return false }

    this.filled.push(coords)

    this.pixels[y][x] = this.project.color

    if (y < RESOLUTION - 1 && this.pixels[y + 1][x] == this.targetColor) {
      this.fill(y + 1, x)
    }

    if (y > 0 && this.pixels[y - 1][x] == this.targetColor) {
      this.fill(y - 1, x)
    }

    if (x < RESOLUTION - 1 && this.pixels[y][x + 1] == this.targetColor) {
      this.fill(y, x + 1)
    }

    if (x > 0 && this.pixels[y][x - 1] == this.targetColor) {
      this.fill(y, x - 1)
    }
  }

  mouseUp(evt) {
    const x = getPixelPosition(evt.offsetX),
          y = getPixelPosition(evt.offsetY)

    this.pixels = [...this.project.currentFrame.pixels]

    if (this.project.currentFrame.pixels[y][x] != this.project.color) {
      this.targetColor = this.pixels[y][x]

      this.fill(y, x)

      this.filled = []
    }

    return this.project.currentFrame.pixels = this.pixels
  }
}

// Mad instance life
export default new Fill()