import Tool from './Tool'

import { RESOLUTION } from 'config/constants'

import { get } from 'svelte/store'

import { project, store } from 'store'

import { DrawPixels } from 'commands'

import { getPixelPositions } from 'lib'

import { renderPixels } from 'lib/drawing'

class Fill extends Tool {
  constructor() {
    super()

    this.cursor = 'fill'

    this.name = 'fill'

    // this.eraseable = true

    this.fill = (...args) => {
      this.fillCount++

      return setTimeout(() => this._fill(...args), 10)
    }
  }

  decrementFillCount() {
    this.fillCount--

    if (this.fillCount === 0) {
      const proj = get(project)

      DrawPixels.perform({ frame: proj.currentFrame, pixels: this.pixels })

      this.pixels = {}

      proj.update()
    }
  }

  _fill(x, y) {
    let frame = get(project).currentFrame

    if ((this.pixels[x] || {})[y] !== undefined) {
      this.decrementFillCount()

      return false
    }

    (this.pixels[x] = this.pixels[x] || {})[y] = get(project).color

    /*
      Need to use '==' instead of '===' so it can match both null & undefined
    */

    if (y < RESOLUTION - 1 && frame.getPixel(x, y + 1) == this.targetColor) {
      this.fill(x, y + 1)
    }

    if (y > 0 && frame.getPixel(x, y - 1) == this.targetColor) {
      this.fill(x, y - 1)
    }

    if (x < RESOLUTION - 1 && frame.getPixel(x + 1, y) == this.targetColor) {
      this.fill(x + 1, y)
    }

    if (x > 0 && frame.getPixel(x - 1, y) == this.targetColor) {
      this.fill(x - 1, y)
    }

    this.decrementFillCount()
  }

  mouseUp(evt) {
    const proj = get(project)

    let frame = proj.currentFrame

    const { x, y } = getPixelPositions(evt)

    if (frame.getPixel(x, y) !== proj.color) {
      this.targetColor = frame.getPixel(x, y)

      this.fillCount = 0
      this.pixels = {}

      this.fill(x, y)
    }

    return proj.update()
  }

  render(ctx) {
    renderPixels({ ctx, pixels: this.pixels || {}, color: store.get('eraseModifier') && 'rgba(0,0,0,0.3)' })
  }
}

// Mad instance life
export default new Fill()