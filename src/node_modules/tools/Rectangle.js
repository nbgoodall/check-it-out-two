import Tool from './Tool'

import { PIXEL_SIZE } from 'config/constants'

import { hexToRgba } from 'lib'

class Rectangle extends Tool {
  constructor() {
    super()

    this.cursor = 'crosshair'

    this.name = 'rectangle'
  }

  mouseUp(evt) {
    if (!this.x1 || !this.y1) return false

    const { x1, y1, x2, y2 } = this.getOrientatedPositions()

    for (let y = y1; y <= y2; y++) {
      for (let x = x1; x <= x2; x++) {
        this.project.currentFrame.setPixel(x, y, this.project.color)
      }
      // pixels[y] = [
      //   ...pixels[y].slice(0, x1),
      //   ...new Array(x2 - x1 + 1).fill(this.project.color),
      //   ...pixels[y].slice(x2 + 1)
      // ]
    }

    // this.project.currentFrame.currentLayer.pixels = pixels

    super.mouseUp(evt)
  }

  render(ctx) {
    if (this.x1 && this.y1 && this.x2 && this.y2) {

      const { x1, y1, x2, y2 } = this.getOrientatedPositions()

      let dx = x2 - x1 + 1,
          dy = y2 - y1 + 1

      ctx.fillStyle = hexToRgba(this.project.color, 0.5)

      ctx.fillRect(x1 * PIXEL_SIZE, y1 * PIXEL_SIZE, dx * PIXEL_SIZE, dy * PIXEL_SIZE)
    }
  }
}

export default new Rectangle()