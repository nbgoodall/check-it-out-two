import Tool from './Tool'

import { get } from 'svelte/store'

import { project } from 'store'

import { DrawPixels } from 'commands'

import { PIXEL_SIZE } from 'config/constants'

import { getPixelPosition, hexToRgba } from 'lib'

import { renderPixels, line } from 'lib/drawing'

class ShapeTool extends Tool {
  shapeFn() {
    throw new Error('Not implemented!')
  }

  draw(color) {
    const { x1, y1, x2, y2 } = this.getPositions()

    return this.shapeFn({ x1, y1, x2, y2, color })
  }

  mouseUp(evt) {
    if (!this.x1 || !this.y1) return false

    const proj = get(project)

    const pixels = this.draw(proj.color)

    DrawPixels.perform({ frame: proj.currentFrame, pixels })

    super.mouseUp(evt)
  }

  render(ctx) {
    if (this.x1 && this.y1 && this.x2 && this.y2) {
      const color = hexToRgba(get(project).color, 0.5)

      const pixels = this.draw(color)

      return renderPixels({ ctx, pixels })
    }
  }
}

export default ShapeTool