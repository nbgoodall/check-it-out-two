import {
  RESOLUTION
} from 'config/constants'

import Tool from './Tool'

import { get } from 'svelte/store'

import { project } from 'store'

import { DrawPixels } from 'commands'

import { getPixelPositions } from 'lib'

import { renderPixels } from 'lib/drawing'

class Brush extends Tool {
  constructor() {
    super()

    this.selecting = false

    this.name = 'brush'
  }

  draw(evt) {
    const { x, y } = getPixelPositions(evt)

    const proj = get(project)

    let color = proj.currentFrame.getPixel(x, y) === proj.color ? null : proj.color

    let newColor = this.selecting ? this.selectingColor : color

    if (!this.selecting) {
      this.selecting = true

      this.selectingColor = color
    }

    (this.pixels[x] = this.pixels[x] || {})[y] = newColor
  }

  render(ctx) {
    renderPixels({ ctx, pixels: this.pixels })
  }

  mouseDown(evt) {
    this.pixels = {}

    return this.draw(evt)
  }

  mouseMove(evt) {
    const isMouseDown = evt.buttons == 1

    if (!isMouseDown) { return false }

    return this.draw(evt)
  }

  mouseUp(evt) {
    DrawPixels.perform({ frame: get(project).currentFrame, pixels: this.pixels })

    this.reset()
  }

  reset() {
    super.reset()

    this.pixels = {}
    this.selecting = false
  }
}

// Mad instance life
export default new Brush()