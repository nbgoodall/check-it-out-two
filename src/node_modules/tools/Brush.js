import {
  RESOLUTION
} from 'config/constants'

import Tool from './Tool'

import { getPixelPositions } from 'lib'

class Brush extends Tool {
  constructor() {
    super()

    this.selectingColor = null

    this.name = 'brush'
  }

  draw(evt) {
    const { x, y } = getPixelPositions(evt)

    // if (x >= RESOLUTION || y >= RESOLUTION) return false

    let newColor = this.project.currentFrame.currentLayer.getPixel(x, y) === this.project.color ? 'transparent' : this.project.color

    if (!this.selectingColor) {
      this.selectingColor = newColor
    }

    this.project.currentFrame.updatePixel(x, y, this.selectingColor || newColor)
  }

  mouseDown(evt) {
    return this.draw(evt)
  }

  mouseMove(evt) {
    const isMouseDown = evt.buttons == 1

    if (!isMouseDown) { return false }

    return this.draw(evt)
  }

  mouseUp(evt) {
    this.selectingColor = null
  }
}

// Mad instance life
export default new Brush()