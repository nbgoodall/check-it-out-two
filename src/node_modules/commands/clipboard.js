import { RESOLUTION, PIXEL_SIZE } from 'config/constants'

import { get } from 'svelte/store'

import { store, project, clipboard, mouse } from 'store'

import Layer from 'models/Layer'

import Command from './Command'

import { getLayer } from './utils'

import { DeleteLayer } from './layers'

class Copy {
  // Doesn't modify anything, so no history here
  static perform({ frameId, layerIds }) {
    const frame = get(project).frames[frameId]

    const layers = layerIds.map(id => frame.layers[id])

    clipboard.set(JSON.stringify(layers))

    return layers
  }
}

class Cut extends Command {
  static perform({ frameId, layerIds }) {
    const layers = Copy.perform({ frameId, layerIds })

    get(project).frames[frameId].deleteLayers({ layerIds })

    this.push('Cut', { frameId, layers })

    store.update({ activeLayerIds: [] })
  }

  static undo({ frameId, layers }) {
    const frame = get(project).frames[frameId]

    frame.addLayers({ layers })

    store.update({ activeLayerIds: layers.map(layer => layer.id) })

    clipboard.set(null)
  }

  static redo({ frameId, layers }) {
    clipboard.set(JSON.stringify(layers))

    const frame =  get(project).frames[frameId]

   frame.deleteLayers({ layerIds: layers.map(layer => layer.id) })

    store.update({ activeLayerIds: [] })
  }
}

const combinedBounds = layers => {
  return layers.reduce((coords, layer) => {
    coords[0] = Math.min(coords[0], layer._x + layer.bounds[0])
    coords[1] = Math.min(coords[1], layer._y + layer.bounds[1])
    coords[2] = Math.max(coords[2], layer._x + layer.bounds[2])
    coords[3] = Math.max(coords[3], layer._y + layer.bounds[3])

    return coords
  }, [Infinity, Infinity, 0, 0])
}

class Paste extends Command {
  static perform() {
    const clip = JSON.parse(get(clipboard))

    if (!Array.isArray(clip) || clip.length === 0) return false

    // Strip the IDs for that sweet pasting
    let layers = clip.map(_layer => {
      const { id: oldId, ...layer } = _layer

      return layer
    }).reverse() // Reverse to get z-indices right when we draw

    const frame = get(project).currentFrame

    // Current mouse position
    const { x, y } = get(mouse)

    // The total layer bounds
    const [xMin, yMin, xMax, yMax] = combinedBounds(layers)

    // Half width & height of combined layer bounds
    const hWidth = (xMax - xMin) / 2,
         hHeight = (yMax - yMin) / 2

    for (let layer of layers) {
      layer._x += x - xMin - hWidth
      layer._y += y - yMin - hHeight
    }

    // Re-assign the layers to give them IDs (which they don't have from the cut/copy commands)
    layers = frame.addLayers({ layers })

    store.update({ activeLayerIds: layers.map(layer => layer.id) })

    return this.push('Paste', { layers, frameId: frame.id })
  }

  static undo({ frameId, layers }) {
    const frame = get(project).frames[frameId]

    const layerIds = layers.map(layer => layer.id)

    frame.deleteLayers({ layerIds })

    store.update(state => ({
      activeLayerIds:  [...state.activeLayerIds].filter(id => !layers.includes(l => l.id !== id))
    }))
  }

  static redo({ frameId, layers }) {
    const frame = get(project).frames[frameId]

    frame.addLayers({ layers })

    store.update({ activeLayerIds: layers.map(layer => layer.id) })
  }
}


export {
  Cut,
  Copy,
  Paste
}