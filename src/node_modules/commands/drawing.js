import { RESOLUTION, PIXEL_SIZE } from 'config/constants'

import { get } from 'svelte/store'

import Layer from 'models/Layer'

import Command from './Command'

import { getLayer } from './utils'


/* Draw pixels

  pixels = {
    [x]: {
      [y]: '#ABC123'
    }
  }
*/

// TODO: switch active frame if history happened in a diff frame...

const drawPixel = ({ layer, x, y, value }) => {
  if (layer.pixels[x]) {
    if (value === null || value === 'transparent') {
      delete layer.pixels[x][y]

      if (Object.keys(layer.pixels[x]).length <= 0) {
        delete layer.pixels[x]
      }
    }
    else {
      layer.pixels[x][y] = value
    }
  }
  else if (value && value !== 'transparent') {
    layer.pixels[x] = { [y]: value }
  }

  layer.updateBounds()
}

class DrawPixel extends Command {
  static perform({ frameId, id, x: mX, y: mY, value }) {
    const layer = getLayer(frameId, id)

    // Normalize x & y from mouse event coords
    const x = mX - layer.x / PIXEL_SIZE,
          y = mY - layer.y / PIXEL_SIZE

    const oldValue = (layer.pixels[x] || {})[y] || null

    // No need to update if it's all the same yo
    if (oldValue === value) return false

    drawPixel({ layer, x, y, value })

    return this.push('DrawPixel', { frameId, id, x, y, value, oldValue })
  }

  static undo({ frameId, id, oldValue, ...params }) {
    const layer = getLayer(frameId, id)

    return drawPixel({ layer, ...params, value: oldValue })
  }

  static redo({ frameId, id, ...params }) {
    const layer = getLayer(frameId, id)

    return drawPixel({ layer, ...params })
  }
}

// This, or composite command?

// Draw all pixels when you mouseUp, not each individual one :(

class DrawPixels extends Command {
  static perform({ layer, pixels }) {
    return this.push('DrawPixels', { id, frameId, dx, dy })
  }

  static undo(params) {
    return moveLayer({ ...params, direction: -1 })
  }

  static redo(params) {
    return moveLayer({ ...params, direction: 1 })
  }
}

// Undoing the slo-ish-mo fill effect would be EPIC :O
class FillPixels extends Command {}

export {
  DrawPixel
}